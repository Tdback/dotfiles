# Functions sourced in ~/.zshrc

#  A command line awk calculator for simple arithmetic operations. Don't forget 
#+ to wrap quotes around the arguments.
awc () { awk "BEGIN { print $* }" ;}

# Create and go to directory
mkdirg () { mkdir -p "$1"; cd "$1" ;}

# Copy and go to directory
cpg () {
  if [ -d "$2" ]; then
    cp "$1" "$2" && cd "$2"
  else
    cp "$1" "$2"
  fi
}

# Move and go to directory
mvg () {
  if [ -d "$2" ]; then
    mv "$1" "$2" && cd "$2"
  else
    mv "$1" "$2"
  fi
}

#  Search for text in all files in current directory using the following:
#+ -i: case-insensitive
#+ -I: ignore binary files
#+ -H: display file name
#+ -n: display line numbers
#+ -r: recursive search
#+ -P: PCRE regex (optional, use -E for egrep-like queries)
ftext () { grep -iIHnrP "$1" | less ;}

# List total number of pacman packages installed on the system
pkgs () { pacman -Q | wc -l | xargs -I{} echo "Packages installed: {}" ;} 

# Create a new Go project
ngo () {
  mkdir -p "$1" && cd "$1"
  cp ~/Documents/LICENSE . 
  touch README.org
  go mod init "$1" 

  cat >./"$2".go << EOL
package main

import (
       "fmt"
)

func main() {
        fmt.Println("Don't Panic")
}
EOL

  go run .
}

# Look at the current weather
weather () {
  default="kalamazoo"
  city="${$(echo "$1" | sed 's/ /+/g'):-$default}"

  curl -s "https://wttr.in/$city" | head -n -2
}

# Look for books fast
textbook () {
  textbook=$(echo "$1" | sed 's/ /+/g')
  $BROWSER "https://libgen.rs/search.php?req=$textbook"
}

# Set the current background
sbg () {
  images=$(ls ~/.config/backgrounds/)

  selected=$(echo "$images" | fzf)
  if [[ -z $selected ]]; then
    exit 0
  fi

  feh --bg-scale "$HOME/.config/backgrounds/$selected" 
}
